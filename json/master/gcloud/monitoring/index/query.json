{
  "description": "\n Google Stackdriver Monitoring API wrapper.", 
  "examples": [], 
  "id": "gcloud.monitoring.__init__.query", 
  "methods": [
    {
      "examples": [], 
      "exceptions": [], 
      "id": "gcloud.monitoring.__init__.Query.__init__", 
      "name": "__init__", 
      "params": [], 
      "returns": [], 
      "source": "gcloud/monitoring/query.py#L122", 
      "type": "instance"
    }, 
    {
      "examples": [], 
      "exceptions": [], 
      "id": "gcloud.monitoring.__init__.Query.align", 
      "name": "align", 
      "params": [
        {
          "description": " The number of minutes in the alignment period.", 
          "name": "minutes", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "integer"
          ]
        }, 
        {
          "description": " The number of seconds in the alignment period.", 
          "name": "seconds", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "integer"
          ]
        }, 
        {
          "description": " The number of hours in the alignment period.", 
          "name": "hours", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "integer"
          ]
        }, 
        {
          "description": " The approach to be used to align individual time series. For example: :data:Aligner.ALIGN_MEAN. See Aligner and the descriptions of the supported aligners_.", 
          "name": "per_series_aligner", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "string"
          ]
        }
      ], 
      "returns": [
        {
          "types": [
            "Query"
          ]
        }
      ], 
      "source": "gcloud/monitoring/query.py#L332", 
      "type": "instance"
    }, 
    {
      "examples": [], 
      "exceptions": [], 
      "id": "gcloud.monitoring.__init__.Query.as_dataframe", 
      "name": "as_dataframe", 
      "params": [
        {
          "description": " The label name to use for the dataframe header. This can be the name of a resource label or metric label (e.g., \"instance_name\"), or the string <code>\"resource_type\"</code>.", 
          "name": "label", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "string or None"
          ]
        }, 
        {
          "description": " A list or tuple of label names to use for the dataframe header. If more than one label name is provided, the resulting dataframe will have a multi-level column header. Providing values for both <code>label</code> and <code>labels</code> is an error.", 
          "name": "labels", 
          "nullable": null, 
          "optional": null, 
          "types": [
            " strings, or None"
          ]
        }
      ], 
      "returns": [
        {
          "types": [
            "pandas.DataFrame"
          ]
        }
      ], 
      "source": "gcloud/monitoring/query.py#L533", 
      "type": "instance"
    }, 
    {
      "examples": [], 
      "exceptions": [], 
      "id": "gcloud.monitoring.__init__.Query.copy", 
      "name": "copy", 
      "params": [], 
      "returns": [
        {
          "types": [
            "Query"
          ]
        }
      ], 
      "source": "gcloud/monitoring/query.py#L575", 
      "type": "instance"
    }, 
    {
      "examples": [], 
      "exceptions": [], 
      "id": "gcloud.monitoring.__init__.Query.iter", 
      "name": "iter", 
      "params": [], 
      "returns": [], 
      "source": "gcloud/monitoring/query.py#L410", 
      "type": "instance"
    }, 
    {
      "examples": [], 
      "exceptions": [], 
      "id": "gcloud.monitoring.__init__.Query.reduce", 
      "name": "reduce", 
      "params": [
        {
          "description": " Fields to be preserved by the reduction. For example, specifying just <code>\"resource.zone\"</code> will result in one time series per zone. The default is to aggregate all of the time series into just one.", 
          "name": "group_by_fields", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "strings"
          ]
        }, 
        {
          "description": " The approach to be used to combine time series. For example:", 
          "name": "cross_series_reducer", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "string"
          ]
        }
      ], 
      "returns": [
        {
          "types": [
            "Query"
          ]
        }
      ], 
      "source": "gcloud/monitoring/query.py#L374", 
      "type": "instance"
    }, 
    {
      "examples": [], 
      "exceptions": [], 
      "id": "gcloud.monitoring.__init__.Query.select_group", 
      "name": "select_group", 
      "params": [
        {
          "description": " The ID of a group to filter by.", 
          "name": "group_id", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "string"
          ]
        }
      ], 
      "returns": [
        {
          "types": [
            "Query"
          ]
        }
      ], 
      "source": "gcloud/monitoring/query.py#L195", 
      "type": "instance"
    }, 
    {
      "examples": [], 
      "exceptions": [], 
      "id": "gcloud.monitoring.__init__.Query.select_interval", 
      "name": "select_interval", 
      "params": [
        {
          "description": " The end time (inclusive) of the time interval for which results should be returned, as a datetime object.", 
          "name": "end_time", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "datetime.datetime"
          ]
        }, 
        {
          "description": " The start time (exclusive) of the time interval for which results should be returned, as a datetime object. If not specified, the interval is a point in time.", 
          "name": "start_time", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "datetime.datetime or None"
          ]
        }
      ], 
      "returns": [
        {
          "types": [
            "Query"
          ]
        }
      ], 
      "source": "gcloud/monitoring/query.py#L163", 
      "type": "instance"
    }, 
    {
      "examples": [], 
      "exceptions": [], 
      "id": "gcloud.monitoring.__init__.Query.select_metrics", 
      "name": "select_metrics", 
      "params": [
        {
          "description": " Raw filter expression strings to include in the conjunction. If just one is provided and no keyword arguments are provided, it can be a disjunction.", 
          "name": "args", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "tuple"
          ]
        }, 
        {
          "description": " Label filters to include in the conjunction as described above.", 
          "name": "kwargs", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "dict"
          ]
        }
      ], 
      "returns": [
        {
          "types": [
            "Query"
          ]
        }
      ], 
      "source": "gcloud/monitoring/query.py#L292", 
      "type": "instance"
    }, 
    {
      "examples": [], 
      "exceptions": [], 
      "id": "gcloud.monitoring.__init__.Query.select_projects", 
      "name": "select_projects", 
      "params": [
        {
          "description": " Project IDs limiting the resources to be included in the query.", 
          "name": "args", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "tuple"
          ]
        }
      ], 
      "returns": [
        {
          "types": [
            "Query"
          ]
        }
      ], 
      "source": "gcloud/monitoring/query.py#L212", 
      "type": "instance"
    }, 
    {
      "examples": [], 
      "exceptions": [], 
      "id": "gcloud.monitoring.__init__.Query.select_resources", 
      "name": "select_resources", 
      "params": [
        {
          "description": " Raw filter expression strings to include in the conjunction. If just one is provided and no keyword arguments are provided, it can be a disjunction.", 
          "name": "args", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "tuple"
          ]
        }, 
        {
          "description": " Label filters to include in the conjunction as described above.", 
          "name": "kwargs", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "dict"
          ]
        }
      ], 
      "returns": [
        {
          "types": [
            "Query"
          ]
        }
      ], 
      "source": "gcloud/monitoring/query.py#L234", 
      "type": "instance"
    }
  ], 
  "name": "Query", 
  "source": "gcloud/monitoring/__init__.py"
}