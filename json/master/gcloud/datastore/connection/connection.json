{
  "description": "\n Connections to gcloud datastore API servers.", 
  "examples": [], 
  "id": "gcloud.datastore.connection.connection", 
  "methods": [
    {
      "examples": [], 
      "exceptions": [], 
      "id": "gcloud.datastore.connection.Connection.__init__", 
      "name": "__init__", 
      "params": [], 
      "returns": [], 
      "source": "gcloud/datastore/connection.py#L374", 
      "type": "instance"
    }, 
    {
      "examples": [], 
      "exceptions": [], 
      "id": "gcloud.datastore.connection.Connection.allocate_ids", 
      "name": "allocate_ids", 
      "params": [
        {
          "description": " The keys for which the backend should allocate IDs.", 
          "name": "key_pbs", 
          "nullable": null, 
          "optional": null, 
          "types": [
            ""
          ]
        }, 
        {
          "description": " The project to which the transaction belongs.", 
          "name": "project", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "string"
          ]
        }
      ], 
      "returns": [
        {
          "types": [
            " gcloud.datastore._generated.entity_pb2.Key"
          ]
        }
      ], 
      "source": "gcloud/datastore/connection.py#L598", 
      "type": "instance"
    }, 
    {
      "examples": [], 
      "exceptions": [], 
      "id": "gcloud.datastore.connection.Connection.begin_transaction", 
      "name": "begin_transaction", 
      "params": [
        {
          "description": " The project to which the transaction applies.", 
          "name": "project", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "string"
          ]
        }
      ], 
      "returns": [
        {
          "types": [
            "bytes"
          ]
        }
      ], 
      "source": "gcloud/datastore/connection.py#L532", 
      "type": "instance"
    }, 
    {
      "examples": [], 
      "exceptions": [], 
      "id": "gcloud.datastore.connection.Connection.build_api_url", 
      "name": "build_api_url", 
      "params": [
        {
          "description": " The project to connect to. This is usually your project name in the cloud console.", 
          "name": "project", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "string"
          ]
        }, 
        {
          "description": " The base URL where the API lives. You shouldn't have to provide this.", 
          "name": "base_url", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "string"
          ]
        }, 
        {
          "description": " The version of the API to connect to. You shouldn't have to provide this.", 
          "name": "api_version", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "string"
          ]
        }, 
        {
          "description": " The API method to call (e.g. 'runQuery', 'lookup').", 
          "name": "method", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "string"
          ]
        }
      ], 
      "returns": [
        {
          "types": [
            "str"
          ]
        }
      ], 
      "source": "gcloud/datastore/connection.py#L389", 
      "type": "instance"
    }, 
    {
      "examples": [], 
      "exceptions": [], 
      "id": "gcloud.datastore.connection.Connection.commit", 
      "name": "commit", 
      "params": [
        {
          "description": " The project to which the transaction applies.", 
          "name": "project", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "string"
          ]
        }, 
        {
          "description": " The transaction ID returned from", 
          "name": "transaction_id", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "string or None"
          ]
        }, 
        {
          "description": " The protobuf with the mutations being committed.", 
          "name": "request", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "<a data-custom-type=\"gcloud/datastore/connection/connection/_generated/datastore_pb2/commitrequest\">gcloud.datastore.connection.Connection._generated.datastore_pb2.CommitRequest</a>"
          ]
        }
      ], 
      "returns": [
        {
          "types": [
            "tuple"
          ]
        }
      ], 
      "source": "gcloud/datastore/connection.py#L547", 
      "type": "instance"
    }, 
    {
      "examples": [
        {
          "code": "from gcloud import datastore\nclient = datastore.Client(project='project')\nkey = client.key('MyKind', 1234)\nclient.get(key)\n[&lt;Entity object&gt;]\nconnection.lookup('project', [key.to_protobuf()])\n[&lt;Entity protobuf&gt;]\n"
        }
      ], 
      "exceptions": [], 
      "id": "gcloud.datastore.connection.Connection.lookup", 
      "name": "lookup", 
      "params": [
        {
          "description": " The keys to retrieve from the datastore.", 
          "name": "key_pbs", 
          "nullable": null, 
          "optional": null, 
          "types": [
            ""
          ]
        }, 
        {
          "description": " If passed, make the request in the scope of the given transaction. Incompatible with <code>eventual==True</code>.", 
          "name": "transaction_id", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "string"
          ]
        }, 
        {
          "description": " The project to look up the keys in.", 
          "name": "project", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "string"
          ]
        }, 
        {
          "description": " If False (the default), request <code>STRONG</code> read consistency. If True, request <code>EVENTUAL</code> read consistency.", 
          "name": "eventual", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "bool"
          ]
        }
      ], 
      "returns": [
        {
          "types": [
            "tuple"
          ]
        }
      ], 
      "source": "gcloud/datastore/connection.py#L419", 
      "type": "instance"
    }, 
    {
      "examples": [], 
      "exceptions": [], 
      "id": "gcloud.datastore.connection.Connection.rollback", 
      "name": "rollback", 
      "params": [], 
      "returns": [], 
      "source": "gcloud/datastore/connection.py#L581", 
      "type": "instance"
    }, 
    {
      "examples": [], 
      "exceptions": [], 
      "id": "gcloud.datastore.connection.Connection.run_query", 
      "name": "run_query", 
      "params": [
        {
          "description": " If passed, make the request in the scope of the given transaction. Incompatible with <code>eventual==True</code>.", 
          "name": "transaction_id", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "string"
          ]
        }, 
        {
          "description": " The project over which to run the query.", 
          "name": "project", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "string"
          ]
        }, 
        {
          "description": " The Protobuf representing the query to run.", 
          "name": "query_pb", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "<a data-custom-type=\"gcloud/datastore/_generated/query_pb2/query\">gcloud.datastore._generated.query_pb2.Query</a>"
          ]
        }, 
        {
          "description": " If False (the default), request <code>STRONG</code> read consistency. If True, request <code>EVENTUAL</code> read consistency.", 
          "name": "eventual", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "bool"
          ]
        }, 
        {
          "description": " The namespace over which to run the query.", 
          "name": "namespace", 
          "nullable": null, 
          "optional": null, 
          "types": [
            "string"
          ]
        }
      ], 
      "returns": [
        {
          "types": [
            "tuple"
          ]
        }
      ], 
      "source": "gcloud/datastore/connection.py#L477", 
      "type": "instance"
    }
  ], 
  "name": "Connection", 
  "source": "gcloud/datastore/connection.py"
}